{"version":3,"sources":["Components/LoadingSpinner/LoadingSpinner.js","Components/FormLoadingSpinner/FormLoadingSpinner.js","Components/SearchStopField/SearchStopField.js","Components/LineTransitType/LineTransitType.js","Components/DepartureRow/DepartureRow.js","Components/DepartureTable/DepartureTable.js","Components/LastStops/LastStops.js","Components/DepartureComponent/DepartureComponent.js","Components/App.js","serviceWorker.js","index.js"],"names":["LoadingSpinner","react_default","a","createElement","className","aria-hidden","Component","FormLoadingSpinner","id","renderInputComponent","inputProps","getSuggestionValue","suggestion","Haltestellenname","renderSuggestion","shouldRenderSuggestions","value","trim","length","SearchStopField","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSuggestionSelected","event","_ref","props","handleNewSelectedStop","VGNKennung","onChange","_ref2","newValue","setState","onSuggestionsFetchRequested","_ref3","getSuggestions","onSuggestionsClearRequested","suggestions","state","isLoading","term","_this2","axios","get","params","name","then","result","data","Haltestellen","slice","error","console","inputValue","toLowerCase","replace","getStopArray","_this$state","placeholder","dist_default","Components_FormLoadingSpinner_FormLoadingSpinner","PropTypes","func","LineTransitType","departureTransitType","cssClass","symbolStr","departureLine","typeStyles","styleTransitType","DepartureRow","cssDelayClass","delay","isDelayed","Fragment","departureTime","time","Components_LineTransitType_LineTransitType","departureDirection","DepartureTable","rows","departures","stopName","forEach","item","index","datePlannedStr","dateRealStr","datePlanned","Date","Math","floor","checkDepartureDelay","AbfahrtszeitSoll","AbfahrtszeitIst","push","key","Components_DepartureRow_DepartureRow","moment","parseZone","format","Richtungstext","Linienname","Produkt","type","onClick","newSearchButtonFn","StopListItem","e","searchStop","stop","StopList","listItems","stops","map","toString","LastStops","lastStops","toConsumableArray","reverse","formatOutput","array","DepartureComponent","actualStop","loadingDepartures","showSearchStopField","bind","assertThisInitialized","ls","lastStop","prevState","findIndex","s","splice","shift","returnValue","concat","set","stop_id","method","baseURL","url","Abfahrten","addNewLastStopItemToState","getDepartureArray","preventDefault","Components_SearchStopField_SearchStopField","Components_LastStops_LastStops","handleSearchStop","Components_DepartureTable_DepartureTable","newSearchButtonClicked","Components_LoadingSpinner_LoadingSpinner","App","Components_DepartureComponent_DepartureComponent","GithubCorner_default","href","size","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d4d56c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './LoadingSpinner.css';\n\nclass LoadingSpinner extends Component {\n    render() {\n        return (\n            <div className=\"LoadingSpinnerContainer\">\n                <i className=\"fa fa-3x fa-pulse fa-spinner\" aria-hidden=\"true\"></i>\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        );\n    }\n}\n\nexport default LoadingSpinner;","import React, { Component } from 'react';\nimport './FormLoadingSpinner.css';\n\nclass FormLoadingSpinner extends Component {\n    render() {\n        return (\n                <i className=\"fa fa-spinner fa-pulse\" id=\"loadingSpinner\"></i>\n            )\n    }\n}\n\nexport default FormLoadingSpinner","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Autosuggest from 'react-autosuggest';\nimport './SearchStopField.css'\nimport FormLoadingSpinner from '../FormLoadingSpinner/FormLoadingSpinner'\n\n/* ----------------- */\n/*    Helper Methods */\n/* ----------------- */\n\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n/* ----------------- */\n/*    Suggestions    */\n/* ----------------- */\n\nconst renderInputComponent = inputProps => (\n    <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">\n                <i className=\"fa fa-search\"></i>\n            </div>\n        </div>\n    <input {...inputProps} />\n  </div>\n)\n\nconst getSuggestionValue = suggestion => suggestion.Haltestellenname;\n\nconst renderSuggestion = suggestion => (\n    <div>\n    {suggestion.Haltestellenname}\n  </div>\n);\n\nconst shouldRenderSuggestions = value => value.trim().length > 2;\n\n/* ----------------- */\n/*    Exports        */\n/* ----------------- */\n\nclass SearchStopField extends Component {\n    constructor() {\n        super();\n        this.state = {\n            value: '',\n            suggestions: [],\n            isLoading: false\n        };\n    }\n\n    onSuggestionSelected = (event, { suggestion }) => {\n        this.props.handleNewSelectedStop(suggestion.VGNKennung);\n    }\n\n    onChange = (event, { newValue }) => {\n        this.setState({\n            value: newValue\n        });\n    };\n\n    getStopArray(term) {\n        this.setState({\n            isLoading: true\n        });\n        axios.get('https://start.vag.de/dm/api/haltestellen.json/vgn', {\n                params: {\n                    name: term,\n                }\n            })\n            .then(\n                (result) => {\n                    this.setState({\n                        suggestions: result.data.Haltestellen.slice(0, 15),\n                        isLoading: false\n                    });\n                },\n                (error) => {\n                    console.error(error);\n                }\n            );\n    }\n\n    getSuggestions(value) {\n        const inputValue = escapeRegexCharacters(value.trim().toLowerCase());\n        const inputLength = inputValue.length;\n\n        if (inputLength === 0) {\n            this.setState({\n                suggestions: []\n            });\n        }\n        else {\n            this.getStopArray(inputValue);\n        }\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.getSuggestions(value)\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n        const { value, suggestions, isLoading } = this.state;\n        const inputProps = {\n            placeholder: 'Search for stops',\n            value,\n            className: 'form-control',\n            onChange: this.onChange,\n        };\n\n        return (\n            <div className=\"SearchStopField\">\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          onSuggestionSelected={this.onSuggestionSelected}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n          shouldRenderSuggestions={shouldRenderSuggestions}\n          renderInputComponent={renderInputComponent}\n        />\n      { isLoading ? <FormLoadingSpinner /> : null}\n      </div>\n        );\n    }\n}\n\nSearchStopField.props = {\n    handleNewSelectedStop: PropTypes.func\n}\n\nexport default SearchStopField","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './LineTransitType.css';\n\n/* ----------------- */\n/*    EXPORTS        */\n/* ----------------- */\n\nclass LineTransitType extends Component {\n  styleTransitType(departureTransitType) {\n    const switchTerm = departureTransitType ? departureTransitType.toLowerCase() : \"\"\n    switch (switchTerm) {\n      case 'ubahn':\n        return {\n          cssClass: 'ubahn',\n          symbolStr: 'fa-train'\n        };\n      case 'tram':\n        return {\n          cssClass: 'tram',\n          symbolStr: 'fa-subway'\n        };\n      case 'bus':\n        return {\n          cssClass: 'bus',\n          symbolStr: 'fa-bus'\n        };\n      default:\n        return {\n          cssClass: 'bus',\n          symbolStr: 'fa-bus'\n        };\n    }\n  }\n\n  render() {\n    const departureLine = this.props.departureLine\n    const departureTransitType = this.props.departureTransitType;\n    const typeStyles = this.styleTransitType(departureTransitType);\n\n    return (\n        <span className=\"departureTransitType\">\n          <i className={'fa ' + typeStyles.symbolStr} aria-hidden=\"true\"></i>\n          <span className={'departureLine '+ typeStyles.cssClass}>{departureLine}</span>\n        </span>\n    )\n  }\n}\n\nLineTransitType.propTypes = {\n  departureTransitType: PropTypes.string,\n  departureLine: PropTypes.string\n}\n\nexport default LineTransitType","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './DepartureRow.css';\n\nimport LineTransitType from '../LineTransitType/LineTransitType';\n\n/* ----------------- */\n/*    EXPORTS        */\n/* ----------------- */\n\nclass DepartureRow extends Component {\n  render() {\n    var cssDelayClass = 'isInTime'\n    if (this.props.delay) {\n      cssDelayClass = (this.props.delay.isDelayed ? 'isDelayed' : 'isInTime')\n    }\n    return (\n      <React.Fragment>\n          <td>\n            <span className=\"departureTime\">{this.props.departureTime}</span>\n            <span className={\"departureDelay \" + cssDelayClass} >+{this.props.delay ? this.props.delay.time : \"0\"}</span>\n          </td>\n          <td>\n            <LineTransitType\n              departureLine={this.props.departureLine}\n              departureTransitType={this.props.departureTransitType}\n            />\n            </td>\n          <td><span className=\"departureDirection\">{this.props.departureDirection}</span></td>\n      \n      </React.Fragment>\n    )\n  }\n}\n\nDepartureRow.propTypes = {\n  departureTime: PropTypes.string,\n  delay:  PropTypes.shape({\n    time: PropTypes.number,\n    isDelayed: PropTypes.bool\n  }),\n  departureLine: PropTypes.string,\n  departureTransitType: PropTypes.string,\n  departureDirection: PropTypes.string\n}\n\nexport default DepartureRow","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './DepartureTable.css';\nimport DepartureRow from '../DepartureRow/DepartureRow';\n// var strftime = require('strftime');\nimport moment from 'moment'\n// TODO: REPLACE strftime with moment.js!\n\n/* ----------------- */\n/*    Helper Methods */\n/* ----------------- */\nfunction convertHourMinute(value) {\n  // const date = new Date(value);\n  // const date = moment(value);\n  // if (date) {\n  //   return strftime('%H:%M', date);\n  // }\n  // else {\n  //   return '?'\n  // }\n  return moment.parseZone(value).format('HH:mm')\n}\n\nfunction checkDepartureDelay(datePlannedStr, dateRealStr) {\n  const datePlanned = new Date(datePlannedStr),\n    dateReal = new Date(dateRealStr);\n  const delay = dateReal - datePlanned;\n  var ONE_MINUTE = 60 * 1000; /* ms */\n  if (delay < ONE_MINUTE) {\n    return {\n      isDelayed: false,\n      time: 0\n    }\n  }\n  else {\n    const output = Math.floor(delay / ONE_MINUTE);\n    return {\n      isDelayed: true,\n      time: output\n    }\n  }\n}\n\n/* ----------------- */\n/*    EXPORTS        */\n/* ----------------- */\n\nclass DepartureTable extends Component {\n  // <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n  render() {\n    const rows = [];\n    const departures = this.props.departures ? this.props.departures : [];\n    const stopName = this.props.Haltestellenname ? this.props.Haltestellenname : \"\"\n    if (typeof departures !== 'undefined' && departures.length > 0) {\n      departures.forEach((item, index) => {\n        const delay = checkDepartureDelay(item.AbfahrtszeitSoll, item.AbfahrtszeitIst);\n        rows.push(\n          <tr className=\"departureRow\" key={index}>\n            <DepartureRow\n              departureTime={convertHourMinute(item.AbfahrtszeitSoll)}\n              delay={delay}\n              departureDirection={item.Richtungstext}\n              departureLine={item.Linienname}\n              departureTransitType={item.Produkt}\n              key={index}/>\n          </tr>\n        )\n      })\n      return (\n        <div className=\"deapartureContainer\">\n            <div className='btn-toolbar pull-right'>\n              <div className='btn-group'>\n                <button type='button' onClick={this.props.newSearchButtonFn} className='btn btn-outline-secondary btn-sm'><i className=\"fa fa-search\"></i> New Search</button>\n              </div>\n            </div>\n            <h3>{stopName}</h3>\n            <table className=\"table table-striped<\">\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>Line</th>\n                  <th>Direction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rows}\n              </tbody>\n            </table>\n          </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nDepartureTable.propTypes = {\n  departures: PropTypes.array,\n  Haltestellenname: PropTypes.string,\n  newSearchButtonFn: PropTypes.func \n}\n\nexport default DepartureTable","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './LastStops.css';\n\nfunction StopListItem(props) {\n  return <li className=\"list-inline-item\"><button onClick={(e) => props.searchStop(e, props.stop.VGNKennung)} className=\"btn btn-outline-secondary btn-sm\">{props.stop.Haltestellenname}</button></li>;\n}\n\nfunction StopList(props) {\n  const lastStops = props.stops;\n  const listItems = lastStops.map((stop) =>\n    <StopListItem key={stop.VGNKennung.toString()} stop={stop} searchStop={props.searchStop}/>\n  );\n  return (\n    <ul className=\"list-inline\">\n      {listItems}\n    </ul>\n  );\n}\n\nconst formatOutput = (lastStops, searchStop) => {\n  return (\n    <div className=\"LastStopsContainer\">\n      <StopList stops={lastStops} searchStop={searchStop}/>\n    </div>\n  )\n}\n\nclass LastStops extends Component {\n  render() {\n    const lastStops = this.props.lastStops ? [...this.props.lastStops].reverse() : [] //\n    const output = lastStops.length > 0 ? formatOutput(lastStops, this.props.searchStop) : null\n    return output\n  }\n}\n\nLastStops.props = {\n  lastStops: PropTypes.array,\n  searchStop: PropTypes.func\n}\n\nexport default LastStops;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ls from 'local-storage'\nimport './DepartureComponent.css'\n\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner'\nimport SearchStopField from '../SearchStopField/SearchStopField'\nimport DepartureTable from '../DepartureTable/DepartureTable'\nimport LastStops from '../LastStops/LastStops'\n\nconst getIndexOfLastStopArrayItem = (stop, arr) => {\n    return arr.findIndex(s => s.VGNKennung === stop.VGNKennung)\n}\n\nclass DepartureComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departures: [],\n            //stop_id: 0,\n            actualStop: null,\n            lastStops: [],\n            loadingDepartures: false,\n            showSearchStopField: true\n        };\n        this.handleNewSelectedStop = this.handleNewSelectedStop.bind(this);\n    }\n    // TODO: LOGIC SHOULD BE MOVED TO THE DEPARTURE TABLE\n\n    componentDidMount() {\n        this.setState({\n            lastStops: ls.get('lastStops') || []\n        });\n    }\n\n    addNewLastStopItemToState(lastStop) {\n        this.setState(prevState => {\n            // lastStop Element of prevState.lastStops ?\n            const index = getIndexOfLastStopArrayItem(lastStop, prevState.lastStops)\n            if (index >= 0) {\n                prevState.lastStops.splice(index, 1)\n            }\n            else {\n                if (prevState.lastStops.length > 2) { prevState.lastStops.shift() }\n            }\n            const returnValue = [...prevState.lastStops, lastStop]\n            ls.set('lastStops', returnValue)\n            return { lastStops: returnValue }\n        });\n    }\n\n    getDepartureArray(stop_id) {\n        this.setState({\n            departures: [],\n            loadingDepartures: true,\n            showSearchStopField: false\n\n        });\n        axios({\n                method: 'get',\n                baseURL: 'https://start.vag.de/dm/api/abfahrten.json/vgn',\n                url: '/' + stop_id.toString(),\n            })\n            .then(\n                (result) => {\n\n                    const lastStop = {\n                        \"Haltestellenname\": result.data.Haltestellenname,\n                        \"VGNKennung\": result.data.VGNKennung\n                    }\n                    this.setState({\n                        loadingDepartures: false,\n                        departures: result.data.Abfahrten,\n                        actualStop: lastStop\n                    })\n                    this.addNewLastStopItemToState(lastStop)\n                },\n                (error) => { console.error(error); }\n            );\n    }\n\n    handleNewSelectedStop(stop_id) {\n        this.getDepartureArray(stop_id);\n    }\n\n    newSearchButtonClicked(e) {\n        e.preventDefault();\n        this.setState({\n            showSearchStopField: true,\n            departures: []\n        })\n    }\n\n    handleSearchStop(e, id) {\n        e.preventDefault();\n        this.getDepartureArray(id)\n    }\n\n    render() {\n        const departures = this.state.departures;\n        const stopName = this.state.actualStop ? this.state.actualStop.Haltestellenname : \"\"\n        return (\n            <div className=\"departureComponent\">\n            { this.state.showSearchStopField ? <SearchStopField handleNewSelectedStop={this.handleNewSelectedStop} /> : null }\n            { this.state.showSearchStopField ? <LastStops lastStops={this.state.lastStops} searchStop={this.handleSearchStop.bind(this)} /> : null }\n            <DepartureTable departures={departures} Haltestellenname={stopName} newSearchButtonFn={this.newSearchButtonClicked.bind(this)}/>\n            { this.state.loadingDepartures ? <LoadingSpinner /> : null}\n          </div>\n        )\n    }\n}\n\nDepartureComponent.props = {\n    \n}\n\nexport default DepartureComponent;","import React, { Component } from 'react';\nimport GithubCorner from 'react-github-corner';\nimport DepartureComponent from './DepartureComponent/DepartureComponent'\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <div className=\"contentContainer\">\n                <h2>Departure Board <small className=\"nowrap\">for VAG Nürnberg</small> </h2>\n                <DepartureComponent />\n              </div>\n            </div>\n          </div>\n    \t\t</div>\n    \t\t<GithubCorner href=\"https://github.com/justusjonas74/vag-departures\" size=\"60\"/>\n    \t</div>\n        )\n    }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* esversion: 6*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n// import registerServiceWorker from './registerServiceWorker';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; // TODO: EXCLUDE ALL UNNECESSARY STUFF!\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}